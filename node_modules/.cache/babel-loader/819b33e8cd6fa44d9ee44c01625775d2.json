{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dan\\\\Desktop\\\\myGame\\\\snake\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useInterval } from \"./useInterval\";\nimport { CANVAS_SIZE, SNAKE_START, APPLE_START, SCALE, SPEED, DIRECTIONS } from \"./constants\";\n\nconst App = () => {\n  _s();\n\n  const canvasRef = useRef();\n  const [snake, setSnake] = useState(SNAKE_START);\n  const [apple, setApple] = useState(APPLE_START);\n  const [dir, setDir] = useState([0, -1]);\n  const [speed, setSpeed] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  let score = 0;\n  let maxScore;\n  useInterval(() => gameLoop(), speed);\n\n  const endGame = () => {\n    setSpeed(null);\n    setGameOver(true);\n  };\n\n  const moveSnake = _ref => {\n    let {\n      keyCode\n    } = _ref;\n    return keyCode >= 37 && keyCode <= 40 && setDir(DIRECTIONS[keyCode]);\n  };\n\n  const createApple = () => apple.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\n\n  const checkCollision = function (piece) {\n    let snk = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : snake;\n    if (piece[0] * SCALE >= CANVAS_SIZE[0] || piece[0] < 0 || piece[1] * SCALE >= CANVAS_SIZE[1] || piece[1] < 0) return true;\n\n    for (const segment of snk) {\n      if (piece[0] === segment[0] && piece[1] === segment[1]) return true;\n    }\n\n    return false;\n  };\n\n  const checkAppleCollision = newSnake => {\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n      let newApple = createApple();\n\n      while (checkCollision(newApple, newSnake)) {\n        newApple = createApple();\n      }\n\n      setApple(newApple);\n      return true;\n    }\n\n    return false;\n  };\n\n  const gameLoop = () => {\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\n    const newSnakeHead = [snakeCopy[0][0] + dir[0], snakeCopy[0][1] + dir[1]];\n    snakeCopy.unshift(newSnakeHead);\n    if (checkCollision(newSnakeHead)) endGame();\n    if (!checkAppleCollision(snakeCopy)) snakeCopy.pop();\n    setSnake(snakeCopy);\n  };\n\n  const startGame = () => {\n    setSnake(SNAKE_START);\n    setApple(APPLE_START);\n    setDir([0, -1]);\n    setSpeed(SPEED);\n    setGameOver(false);\n  };\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    context.fillStyle = \"pink\";\n    snake.forEach(_ref2 => {\n      let [x, y] = _ref2;\n      return context.fillRect(x, y, 1, 1);\n    });\n    context.fillStyle = \"lightblue\";\n    context.fillRect(apple[0], apple[1], 1, 1);\n  }, [snake, apple, gameOver]);\n\n  for (let i = 2; snake.length > i; i++) {\n    score++;\n  }\n\n  window.localStorage(score);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => moveSnake(e),\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Press the arrow on your keyboard to steer\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    style: {\n      border: \"1px solid black\"\n    },\n    ref: canvasRef,\n    width: `${CANVAS_SIZE[0]}px`,\n    height: `${CANVAS_SIZE[1]}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), gameOver && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"over\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 20\n    }\n  }, \"GAME OVER!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"Start Game\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"Score:\", score, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Max Score:\", \" \"));\n};\n\n_s(App, \"5ZtecSqDuaXzZAHOdfY2PhKcZo8=\", false, function () {\n  return [useInterval];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useInterval","CANVAS_SIZE","SNAKE_START","APPLE_START","SCALE","SPEED","DIRECTIONS","App","canvasRef","snake","setSnake","apple","setApple","dir","setDir","speed","setSpeed","gameOver","setGameOver","score","maxScore","gameLoop","endGame","moveSnake","keyCode","createApple","map","_a","i","Math","floor","random","checkCollision","piece","snk","segment","checkAppleCollision","newSnake","newApple","snakeCopy","JSON","parse","stringify","newSnakeHead","unshift","pop","startGame","context","current","getContext","setTransform","clearRect","window","innerWidth","innerHeight","fillStyle","forEach","x","y","fillRect","length","localStorage","e","border"],"sources":["C:/Users/Dan/Desktop/myGame/snake/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useInterval } from \"./useInterval\";\nimport {\n  CANVAS_SIZE,\n  SNAKE_START,\n  APPLE_START,\n  SCALE,\n  SPEED,\n  DIRECTIONS,\n} from \"./constants\";\n\nconst App = () => {\n  const canvasRef = useRef();\n  const [snake, setSnake] = useState(SNAKE_START);\n  const [apple, setApple] = useState(APPLE_START);\n  const [dir, setDir] = useState([0, -1]);\n  const [speed, setSpeed] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  let score = 0;\n  let maxScore\n\n  useInterval(() => gameLoop(), speed);\n\n  const endGame = () => {\n    setSpeed(null);\n    setGameOver(true);\n  };\n\n  const moveSnake = ({ keyCode }) =>\n    keyCode >= 37 && keyCode <= 40 && setDir(DIRECTIONS[keyCode]);\n\n  const createApple = () =>\n    apple.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\n\n  const checkCollision = (piece, snk = snake) => {\n    if (\n      piece[0] * SCALE >= CANVAS_SIZE[0] ||\n      piece[0] < 0 ||\n      piece[1] * SCALE >= CANVAS_SIZE[1] ||\n      piece[1] < 0\n    )\n      return true;\n\n    for (const segment of snk) {\n      if (piece[0] === segment[0] && piece[1] === segment[1]) return true;\n    }\n\n    return false;\n  };\n\n  const checkAppleCollision = (newSnake) => {\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n      let newApple = createApple();\n      while (checkCollision(newApple, newSnake)) {\n        newApple = createApple();\n      }\n\n      setApple(newApple);\n      return true;\n    }\n\n    return false;\n  };\n\n  const gameLoop = () => {\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\n    const newSnakeHead = [snakeCopy[0][0] + dir[0], snakeCopy[0][1] + dir[1]];\n    snakeCopy.unshift(newSnakeHead);\n    if (checkCollision(newSnakeHead)) endGame();\n    if (!checkAppleCollision(snakeCopy)) snakeCopy.pop();\n    setSnake(snakeCopy);\n  };\n\n  const startGame = () => {\n    setSnake(SNAKE_START);\n    setApple(APPLE_START);\n    setDir([0, -1]);\n    setSpeed(SPEED);\n    setGameOver(false);\n  };\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    context.fillStyle = \"pink\";\n    snake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n    context.fillStyle = \"lightblue\";\n    context.fillRect(apple[0], apple[1], 1, 1);\n  }, [snake, apple, gameOver]);\n  for (let i = 2; snake.length > i; i++) {\n    score++;\n  }\n  window.localStorage(score)\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => moveSnake(e)}\n      className=\"App\"\n    >\n      <span>Press the arrow on your keyboard to steer</span>\n      <canvas\n        style={{ border: \"1px solid black\" }}\n        ref={canvasRef}\n        width={`${CANVAS_SIZE[0]}px`}\n        height={`${CANVAS_SIZE[1]}px`}\n      />\n      {gameOver && <div className=\"over\">GAME OVER!</div>}\n      <button onClick={startGame}>Start Game</button>\n      <p>Score:{score} </p>\n      <p>Max Score:{} </p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,UANF,QAOO,aAPP;;AASA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAMC,SAAS,GAAGV,MAAM,EAAxB;EACA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,WAAD,CAAlC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACM,WAAD,CAAlC;EACA,MAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,CAA9B;EACA,MAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;EACA,IAAIsB,KAAK,GAAG,CAAZ;EACA,IAAIC,QAAJ;EAEApB,WAAW,CAAC,MAAMqB,QAAQ,EAAf,EAAmBN,KAAnB,CAAX;;EAEA,MAAMO,OAAO,GAAG,MAAM;IACpBN,QAAQ,CAAC,IAAD,CAAR;IACAE,WAAW,CAAC,IAAD,CAAX;EACD,CAHD;;EAKA,MAAMK,SAAS,GAAG;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,OAChBA,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAI,EAA5B,IAAkCV,MAAM,CAACR,UAAU,CAACkB,OAAD,CAAX,CADxB;EAAA,CAAlB;;EAGA,MAAMC,WAAW,GAAG,MAClBd,KAAK,CAACe,GAAN,CAAU,CAACC,EAAD,EAAKC,CAAL,KAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB9B,WAAW,CAAC2B,CAAD,CAAX,GAAiBxB,KAAlC,CAAX,CAArB,CADF;;EAGA,MAAM4B,cAAc,GAAG,UAACC,KAAD,EAAwB;IAAA,IAAhBC,GAAgB,uEAAVzB,KAAU;IAC7C,IACEwB,KAAK,CAAC,CAAD,CAAL,GAAW7B,KAAX,IAAoBH,WAAW,CAAC,CAAD,CAA/B,IACAgC,KAAK,CAAC,CAAD,CAAL,GAAW,CADX,IAEAA,KAAK,CAAC,CAAD,CAAL,GAAW7B,KAAX,IAAoBH,WAAW,CAAC,CAAD,CAF/B,IAGAgC,KAAK,CAAC,CAAD,CAAL,GAAW,CAJb,EAME,OAAO,IAAP;;IAEF,KAAK,MAAME,OAAX,IAAsBD,GAAtB,EAA2B;MACzB,IAAID,KAAK,CAAC,CAAD,CAAL,KAAaE,OAAO,CAAC,CAAD,CAApB,IAA2BF,KAAK,CAAC,CAAD,CAAL,KAAaE,OAAO,CAAC,CAAD,CAAnD,EAAwD,OAAO,IAAP;IACzD;;IAED,OAAO,KAAP;EACD,CAdD;;EAgBA,MAAMC,mBAAmB,GAAIC,QAAD,IAAc;IACxC,IAAIA,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,MAAmB1B,KAAK,CAAC,CAAD,CAAxB,IAA+B0B,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,MAAmB1B,KAAK,CAAC,CAAD,CAA3D,EAAgE;MAC9D,IAAI2B,QAAQ,GAAGb,WAAW,EAA1B;;MACA,OAAOO,cAAc,CAACM,QAAD,EAAWD,QAAX,CAArB,EAA2C;QACzCC,QAAQ,GAAGb,WAAW,EAAtB;MACD;;MAEDb,QAAQ,CAAC0B,QAAD,CAAR;MACA,OAAO,IAAP;IACD;;IAED,OAAO,KAAP;EACD,CAZD;;EAcA,MAAMjB,QAAQ,GAAG,MAAM;IACrB,MAAMkB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAejC,KAAf,CAAX,CAAlB;IACA,MAAMkC,YAAY,GAAG,CAACJ,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,IAAkB1B,GAAG,CAAC,CAAD,CAAtB,EAA2B0B,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,IAAkB1B,GAAG,CAAC,CAAD,CAAhD,CAArB;IACA0B,SAAS,CAACK,OAAV,CAAkBD,YAAlB;IACA,IAAIX,cAAc,CAACW,YAAD,CAAlB,EAAkCrB,OAAO;IACzC,IAAI,CAACc,mBAAmB,CAACG,SAAD,CAAxB,EAAqCA,SAAS,CAACM,GAAV;IACrCnC,QAAQ,CAAC6B,SAAD,CAAR;EACD,CAPD;;EASA,MAAMO,SAAS,GAAG,MAAM;IACtBpC,QAAQ,CAACR,WAAD,CAAR;IACAU,QAAQ,CAACT,WAAD,CAAR;IACAW,MAAM,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,CAAN;IACAE,QAAQ,CAACX,KAAD,CAAR;IACAa,WAAW,CAAC,KAAD,CAAX;EACD,CAND;;EAQAnB,SAAS,CAAC,MAAM;IACd,MAAMgD,OAAO,GAAGvC,SAAS,CAACwC,OAAV,CAAkBC,UAAlB,CAA6B,IAA7B,CAAhB;IACAF,OAAO,CAACG,YAAR,CAAqB9C,KAArB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkCA,KAAlC,EAAyC,CAAzC,EAA4C,CAA5C;IACA2C,OAAO,CAACI,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBC,MAAM,CAACC,UAA/B,EAA2CD,MAAM,CAACE,WAAlD;IACAP,OAAO,CAACQ,SAAR,GAAoB,MAApB;IACA9C,KAAK,CAAC+C,OAAN,CAAc;MAAA,IAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD;MAAA,OAAYX,OAAO,CAACY,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAZ;IAAA,CAAd;IACAX,OAAO,CAACQ,SAAR,GAAoB,WAApB;IACAR,OAAO,CAACY,QAAR,CAAiBhD,KAAK,CAAC,CAAD,CAAtB,EAA2BA,KAAK,CAAC,CAAD,CAAhC,EAAqC,CAArC,EAAwC,CAAxC;EACD,CARQ,EAQN,CAACF,KAAD,EAAQE,KAAR,EAAeM,QAAf,CARM,CAAT;;EASA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBnB,KAAK,CAACmD,MAAN,GAAehC,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;IACrCT,KAAK;EACN;;EACDiC,MAAM,CAACS,YAAP,CAAoB1C,KAApB;EACA,oBACE;IACE,IAAI,EAAC,QADP;IAEE,QAAQ,EAAC,GAFX;IAGE,SAAS,EAAG2C,CAAD,IAAOvC,SAAS,CAACuC,CAAD,CAH7B;IAIE,SAAS,EAAC,KAJZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAME;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+CANF,eAOE;IACE,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAV,CADT;IAEE,GAAG,EAAEvD,SAFP;IAGE,KAAK,EAAG,GAAEP,WAAW,CAAC,CAAD,CAAI,IAH3B;IAIE,MAAM,EAAG,GAAEA,WAAW,CAAC,CAAD,CAAI,IAJ5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPF,EAaGgB,QAAQ,iBAAI;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAbf,eAcE;IAAQ,OAAO,EAAE6B,SAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAdF,eAeE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAU3B,KAAV,MAfF,eAgBE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBAhBF,CADF;AAoBD,CAvGD;;GAAMZ,G;UAUJP,W;;;KAVIO,G;AAyGN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}